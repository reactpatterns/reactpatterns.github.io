(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{154:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return p}));var r=t(2),a=t(6),o=(t(0),t(161)),i={id:"render-callback",title:"Render callback",sidebar_label:"Render callback"},c={id:"render-callback",title:"Render callback",description:'Take a look at the example below. Notice that we create a function foo which takes a callback function as a parameter. When we call foo, it turns around and "calls back" to the passed-in function.',source:"@site/docs/render-callback.md",permalink:"/docs/render-callback",sidebar_label:"Render callback",sidebar:"someSidebar",previous:{title:"JSX spread attributes",permalink:"/docs/jsx-spread-attributes"},next:{title:"Function as child component",permalink:"/docs/function-as-child-component"}},l=[],s={rightToc:l};function p(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Take a look at the example below. Notice that we create a function ",Object(o.b)("inlineCode",{parentName:"p"},"foo")," which takes a callback function as a parameter. When we call ",Object(o.b)("inlineCode",{parentName:"p"},"foo"),', it turns around and "calls back" to the passed-in function.'),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const foo = (hello) => {\n  return hello('foo')\n}\n\nfoo((name) => {\n  return `hello from ${name}`\n})\n\n// hello from foo\n")),Object(o.b)("p",null,"As you can see, ",Object(o.b)("inlineCode",{parentName:"p"},"foo")," used the callback function to complete a portion of a string. In the React world, a render callback works the same way, but returning a portion of the rendered markup."),Object(o.b)("p",null,"Here\u2019s what we would like to use it:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"const App = () => {\n  return (\n    <div>\n      <FieldItem username='Bunlong'>\n        {user => user === null ? <Loading /> : <Profile info={user} />}\n      </FieldItem>\n    </div>\n  )\n}\n")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"FieldItem")," will render either the ",Object(o.b)("inlineCode",{parentName:"p"},"Loading")," or the ",Object(o.b)("inlineCode",{parentName:"p"},"Profile")," component, depending on the existence of a ",Object(o.b)("inlineCode",{parentName:"p"},"user")," property. It also passes down a prop of its own, ",Object(o.b)("inlineCode",{parentName:"p"},"username"),", that one of these components can consume to make a call."),Object(o.b)("p",null,"What is interesting here is that ",Object(o.b)("inlineCode",{parentName:"p"},"<FieldItem/>")," uses a function as a child. Any child component inside it is now free to consume this prop however it needs to, totally decoupled from the parent."),Object(o.b)("p",null,"To make it work, the key is to treat ",Object(o.b)("inlineCode",{parentName:"p"},"this.props.children")," as a function. So in order for the ",Object(o.b)("inlineCode",{parentName:"p"},"Profile")," component to render whatever it needs to render, it needs to run the callback on the ",Object(o.b)("inlineCode",{parentName:"p"},"children")," function, passing it the ",Object(o.b)("inlineCode",{parentName:"p"},"user")," argument it expects. Here\u2019s an example implementation of ",Object(o.b)("inlineCode",{parentName:"p"},"Profile"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"class FieldItem extends React.Component {\n  state = { user: null }\n\n  componentDidMount() {\n    // We can make an ajax call here, for e.g.\n    setTimeout(() => this.setState({\n      user: `I have now fulfilled something for ${this.props.username}`\n    }), 1500)\n  }\n\n  render() {\n    // Render the children with a function using state as the argument\n    return this.props.children(this.state.user)\n  }\n}\n")),Object(o.b)("p",null,"The key there is the child component rendering ",Object(o.b)("inlineCode",{parentName:"p"},"return this.props.children(this.state.user)")," with its own state. This means its up to the component to decide how to use the arguments it receives, and the parent component ",Object(o.b)("inlineCode",{parentName:"p"},"FieldItem")," doesn\u2019t care: it only manages which component to render, in this case."),Object(o.b)("p",null,"Looking at ",Object(o.b)("inlineCode",{parentName:"p"},"Profile"),", since ",Object(o.b)("inlineCode",{parentName:"p"},"user")," is ",Object(o.b)("inlineCode",{parentName:"p"},"null")," for 1000ms, the callback receives null as a value for ",Object(o.b)("inlineCode",{parentName:"p"},"user"),", thus rendering ",Object(o.b)("inlineCode",{parentName:"p"},"<Loading />")," first. Once we have a ",Object(o.b)("inlineCode",{parentName:"p"},"user"),", the Profile component will then render. I really enjoy the simplicity and the cleanliness of this approach managing components."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"// Loading component\nconst Loading = () => <p>Loading...</p>\n\n// Profile component\nconst Profile = (props) => <p>{props.info}</p>\n\nconst App = () => {\n  return (\n    <div>\n      <h3>An application</h3>\n      <FieldItem username='magalhini'>\n        { user => user === null ? <Loading /> : <Profile info={user} /> }\n      </FieldItem>\n    </div>\n  )\n}\n  \nclass FieldItem extends React.Component {\n  state = { user: null }\n  \n  componentDidMount() {\n    // We can make an ajax call here, for e.g.\n    setTimeout(() => this.setState({\n      user: `I have now fulfilled something for ${this.props.username}`\n    }), 1500)\n  }\n  \n  render() {\n    // Render the children with a function using state as the argument\n    return this.props.children(this.state.user)\n  }\n}\n          \nReactDOM.render(<App/>, document.getElementById('app'))\n")))}p.isMDXComponent=!0},161:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=a.a.createContext({}),p=function(e){var n=a.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=p(e.components);return a.a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},b=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(t),b=r,m=u["".concat(i,".").concat(b)]||u[b]||d[b]||o;return t?a.a.createElement(m,c(c({ref:n},s),{},{components:t})):a.a.createElement(m,c({ref:n},s))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=b;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);